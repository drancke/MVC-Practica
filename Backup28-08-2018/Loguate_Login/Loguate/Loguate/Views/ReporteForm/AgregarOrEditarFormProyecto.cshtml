@model Loguate.Models.FormProyecto

@{
    ViewBag.Title = "AgregarOrEditarFormProyecto";
    Layout = null;
}
<head>
    <meta charset="UTF-8" />
    @*<title>Krajee JQuery Plugins - &copy; Kartik</title>*@
    @*<link href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta/css/bootstrap.min.css" rel="stylesheet">*@
    @*<link href="../css/fileinput.css" media="all" rel="stylesheet" type="text/css" />*@
    @*<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css" media="all" rel="stylesheet" type="text/css" />*@
    @*<link href="../themes/explorer-fa/theme.css" media="all" rel="stylesheet" type="text/css" />*@

    <script src="~/Content/PlugginFile/themes/explorer-fa/theme.js"></script>
    <link href="~/Content/PlugginFile/css/fileinput-rtl.css" media="all" rel="stylesheet" />
    <script src="~/Content/PlugginFile/js/plugins/sortable.js"></script>
    <script src="~/Content/PlugginFile/js/fileinput.js"></script>

    <script src="~/Content/PlugginFile/js/locales/fr.js"></script>

    <script src="~/Content/PlugginFile/js/locales/es.js"></script>
    <link href="~/Content/PlugginFile/themes/explorer-fa/theme.css" media="all" rel="stylesheet" />


    @*<script src="https://code.jquery.com/jquery-3.2.1.min.js"></script>
        <script src="../js/plugins/sortable.js" type="text/javascript"></script>
        <script src="../js/fileinput.js" type="text/javascript"></script>
        <script src="../js/locales/fr.js" type="text/javascript"></script>
        <script src="../js/locales/es.js" type="text/javascript"></script>
        <script src="../themes/explorer-fa/theme.js" type="text/javascript"></script>
        <script src="../themes/fa/theme.js" type="text/javascript"></script>*@
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.11.0/umd/popper.min.js" type="text/javascript"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta/js/bootstrap.min.js" type="text/javascript"></script>
</head>

<script src="~/Scripts/jquery-3.3.1.min.js"></script>
@using (Html.BeginForm("AgregarOrEditarFormProyecto", "ReporteForm", FormMethod.Post, new { enctype = "multipart/form-data", onSubmit = "return jQueryAjaxPost(this);", data_restUrl = Url.Action("AgregarOrEditarFormProyecto", "ReporteForm", new { id = 0 }) }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID_Proyectos)
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Tipo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Tipo, new SelectList(Model.tipossss, "Nombre", "Nombre"), "Seleccione...", new { @class = "form-control" })
                    @*@Html.EditorFor(model => model.Tipo, new { htmlAttributes = new { @class = "form-control" } })*@
                    @Html.ValidationMessageFor(model => model.Tipo, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Version, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Version, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Version, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Herramientas, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Herramientas, new SelectList(Model.herramientasssss, "Nombre", "Nombre"), "---Seleccione---", new { @class = "form-control" })
                    @*@Html.EditorFor(model => model.Herramientas, new { htmlAttributes = new { @class = "form-control" } })*@
                    @Html.ValidationMessageFor(model => model.Herramientas, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Clientes, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Clientes, new SelectList(Model.clientesss, "Nombre", "Nombre"), "---Seleccione---", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Clientes, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Empresas, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Empresas, new SelectList(Model.empresass, "Nombre", "Nombre"), "Seleccione...", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Empresas, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.AreaModulo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.AreaModulo, new SelectList(Model.areaModuloss, "Nombre", "Nombre"), "Seleccione...", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.AreaModulo, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Productos, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Productos, new SelectList(Model.productosssss, "Nombre", "Nombre"), "Seleccione...", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Productos, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Consultor_Levantamiento, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Consultor_Levantamiento, new SelectList(Model.consultorssss, "Nombre", "Nombre"), "Seleccione...", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Consultor_Levantamiento, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Guardar" class="btn btn-default" />
                @if (Model.ID_Proyectos != 0)
                {
                    <a class="btn btn-success" onclick="refreshAddNewTab('@Url.Action("AgregarOrEditarFormProyecto","ReporteForm",new{id=0})',false)"><i class="fa fa-plus"></i> Agregar Proyecto</a>
                }
            </div>

        </div>

        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.Fecha_Levantamiento, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Fecha_Levantamiento, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Fecha_Levantamiento, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Consultor_Dev, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Consultor_Dev, new SelectList(Model.consultorssss, "Nombre", "Nombre"), "Seleccione...", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Consultor_Dev, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Fecha_inicio_desarrollo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Fecha_inicio_desarrollo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Fecha_inicio_desarrollo, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.fecha_calidad, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.fecha_calidad, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.fecha_calidad, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.comentario, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.comentario, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.comentario, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Fecha_Entrega, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Fecha_Entrega, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Fecha_Entrega, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Atachar_Archivo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="col-md-10">
                        <label for="input-25">Planets and Satellites</label>
                        <div class="file-loading">
                            <input id="input-25" name="input25[]" type="file" multiple>
                        </div>

                    </div>
                    @Html.ValidationMessageFor(model => model.Atachar_Archivo, "", new { @class = "text-danger" })
                </div>
            </div>

            <br />
            <br />
            <br />
            <br />

        </div>
    </div>

    <footer>

        <div>

                <div class=" well well-sm">
                    <p>LogicOne - Proyecto Web</p>
                </div>

            </div>

    </footer>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

}


<script>
    $(document).on('ready', function () {
        var url1 = 'http://upload.wikimedia.org/wikipedia/commons/thumb/e/e1/FullMoon2010.jpg/631px-FullMoon2010.jpg',
            url2 = 'http://upload.wikimedia.org/wikipedia/commons/thumb/6/6f/Earth_Eastern_Hemisphere.jpg/600px-Earth_Eastern_Hemisphere.jpg';
        $("#input-25").fileinput({
            initialPreview: [url1, url2],
            initialPreviewAsData: true,
            initialPreviewConfig: [
                { caption: "Moon.jpg", filename: "MoonFull.jpg", downloadUrl: url1, size: 930321, width: "120px", key: 1 },
                { caption: "Earth.jpg", filename: "EarthFull.jpg", downloadUrl: url2, size: 1218822, width: "120px", key: 2 }
            ],
            deleteUrl: "/site/file-delete",
            overwriteInitial: true,
            maxFileSize: 100,
            initialCaption: "The Moon and the Earth"
        });
    });
</script>



<script>


    $(document).ready(function () {
        $("#clienteId").change(function () {
            $.get("/ReporteForm/GetAllEmpresa", { ID_Clientes: $("#clienteId").val() }, function (data) {
                $("#empresasDropDown").empty();
                $.each(data, function (index, row) {
                    $("#empresasDropDown").append("<option value='" + row.ID_Empresas + "'>" + row.Nombre + "</option>")
                });
            });
        })
    });

</script>

